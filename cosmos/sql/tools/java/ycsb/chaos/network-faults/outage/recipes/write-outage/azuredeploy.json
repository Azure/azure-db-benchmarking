{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "projectName": {
            "type": "string",
            "defaultValue": "Chaos",
            "metadata": {
                "description": "Specifies a name for generating resource names."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Specifies the location for all resources."
            }
        },
        "resultsStorageConnectionString": {
            "type": "securestring",
            "metadata": {
                "description": "Specifies a connection string of the storage account where results will be avaialble"
            }
        },
        "cosmosURI": {
            "type": "string",
            "metadata": {
                "description": "Specifies the URI of the Cosmos DB account"
            }
        },
        "cosmosKey": {
            "type": "securestring",
            "metadata": {
                "description": "Specifies the key for the Cosmos DB account"
            }
        },        "preferredRegionList": {
            "type": "string",
            "metadata": {
                "description": "Specifies a comma separated preferred region list."
            }
        },
        "dropProbability": {
            "type": "string",
            "defaultValue": "1.0",
            "metadata": {
                "description": "Specifies the percentate from 0.00 to 1.0 for packets drop during fault."
            }
        },
        "faultRegion": {
            "type": "string",
            "metadata": {
                "description": "Specifies the region in which fault will be introduced, example West US."
            }
        },
        "waitForFaultToStartInSec": {
            "type": "int",
            "defaultValue": 300,
            "metadata": {
                "description": "Specifies amount of time in sec after workload start when fault introduce. -1 will disable the fault and runs regular benchmarking."
            }
        },
        "durationOfFaultInSec": {
            "type": "int",
            "defaultValue": 300,
            "metadata": {
                "description": "Specifies amount of time in sec for the duration of fault. -1 will disable the fault and runs regular benchmarking."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "metadata": {
                "description": "Specifies a Virtual Machine size"
            }
        },
        "vmCount": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Specifies the number of Virtual Machines/clients"
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "chaos",
            "metadata": {
                "description": "Specifies a username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Specifies a password for the Virtual Machine."
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "[concat(parameters('projectName'), '-vnet')]",
            "metadata": {
                "description": "Specifies a Virtual Network name"
            }
        },
        "vnetAddressPrefixes": {
            "type": "string",
            "defaultValue": "10.2.0.0/16",
            "metadata": {
                "description": "Specifies a Virtual Network Address Prefix"
            }
        },
        "vnetSubnetName": {
            "type": "string",
            "defaultValue": "default",
            "metadata": {
                "description": "Specifies a Virtual Network Subnet name"
            }
        },
        "vnetSubnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.2.0.0/24",
            "metadata": {
                "description": "Specifies a Virtual Network Subnet Address Prefix "
            }
        },
        "threads": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Specifies the threads per client"
            }
        },
        "ycsbOperationCount": {
            "type": "int",
            "defaultValue": 206400,
            "metadata": {
                "description": "Specifies the total number of operations each client perfoms"
            }
        },
        "ycsbGitHubRepoName": {
            "type": "string",
            "defaultValue": "Azure/YCSB",
            "metadata": {
                "description": "Specifies the GitHub Url for YCSB source code repository"
            }
        },
        "ycsbGitHubBranchName": {
            "type": "string",
            "defaultValue": "main",
            "metadata": {
                "description": "Specifies the GitHub branch for YCSB source code repository"
            }
        },
        "benchmarkingToolsRepoName": {
            "type": "string",
            "defaultValue": "Azure/azure-db-benchmarking",
            "metadata": {
                "description": "Specifies the GitHub Url for YCSB source code repository"
            }
        },
        "benchmarkingToolsBranchName": {
            "type": "string",
            "defaultValue": "main",
            "metadata": {
                "description": "Specifies the GitHub branch for YCSB source code repository"
            }
        },
        "diagnosticsLatencyThresholdInMS": {
            "type": "int",
            "defaultValue": -1,
            "metadata": {
                "description": "Specifies request latency threshold for logging clinet request diagnostics. There is no logging by default"
            }
        },
        "requestdistribution": {
            "type": "string",
            "defaultValue": "uniform",
            "metadata": {
                "description": "Specifies request distribution"
            }
        },
        "insertorder": {
            "type": "string",
            "defaultValue": "hashed",
            "metadata": {
                "description": "Specifies insert data in ordered or hashed manner"
            }
        },
        "includeExceptionStackInLog": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Specifies includeExceptionStackInLog true or false, it will print the complete exception trace on error"
            }
        },
        "fieldcount": {
            "type": "string",
            "defaultValue": "10",
            "metadata": {
                "description": "Specifies field count in the item"
            }
        }
    },
    "variables": {
        "templateURL": "[concat('https://raw.githubusercontent.com/',parameters('benchmarkingToolsRepoName'),'/',parameters('benchmarkingToolsBranchName'),'/cosmos/infra/azuredeploy.json')]"       
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "[concat(deployment().name,'LinkedTemplate')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('templateURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "projectName": {
                        "value": "[parameters('projectName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "resultsStorageConnectionString": {
                        "value": "[parameters('resultsStorageConnectionString')]"
                    },
                    "cosmosURI": {
                        "value": "[parameters('cosmosURI')]"
                    },
                    "cosmosKey": {
                        "value": "[parameters('cosmosKey')]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "vmCount": {
                        "value": "[parameters('vmCount')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "vNetName": {
                        "value": "[parameters('vNetName')]"
                    },
                    "vNetAddressPrefixes": {
                        "value": "[parameters('vNetAddressPrefixes')]"
                    },
                    "vNetSubnetName": {
                        "value": "[parameters('vNetSubnetName')]"
                    },
                    "vNetSubnetAddressPrefix": {
                        "value": "[parameters('vNetSubnetAddressPrefix')]"
                    },
                    "threads": {
                        "value": "[parameters('threads')]"
                    },  
                    "ycsbOperationCount": {
                        "value": "[parameters('ycsbOperationCount')]"
                    },
                    "ycsbGitHubRepoName": {
                        "value": "[parameters('ycsbGitHubRepoName')]"
                    },
                    "ycsbGitHubBranchName": {
                        "value": "[parameters('ycsbGitHubBranchName')]"
                    },
                    "benchmarkingToolsRepoName": {
                        "value": "[parameters('benchmarkingToolsRepoName')]"
                    },
                    "benchmarkingToolsBranchName": {
                        "value": "[parameters('benchmarkingToolsBranchName')]"
                    },
                    "diagnosticsLatencyThresholdInMS": {
                        "value": "[parameters('diagnosticsLatencyThresholdInMS')]"
                    },
                    "writeOnlyOperation": {
                        "value": true
                    },
                    "requestdistribution": {
                        "value": "[parameters('requestdistribution')]"
                    },
                    "insertorder": {
                        "value": "[parameters('insertorder')]"
                    },
                    "includeExceptionStackInLog": {
                        "value": "[parameters('includeExceptionStackInLog')]"
                    },
                    "fieldcount": {
                        "value": "[parameters('fieldcount')]"
                    },
                    "preferredRegionList": {
                        "value": "[parameters('preferredRegionList')]"
                    },
                     "waitForFaultToStartInSec": {
                        "value": "[parameters('waitForFaultToStartInSec')]"
                    },
                    "durationOfFaultInSec": {
                        "value": "[parameters('durationOfFaultInSec')]"
                    },
                    "faultRegion": {
                        "value": "[parameters('faultRegion')]"
                    },
                    "dropProbability": {
                        "value": "[parameters('dropProbability')]"
                    }
                }
            }
        }
    ],
    "outputs": {
    }
}
